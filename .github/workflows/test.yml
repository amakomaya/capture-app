name: "testing"

on:
  pull_request:
    types: [ labeled ]

jobs:
  cypress-38:
    runs-on: ubuntu-latest
    if: "github.event.label.name == 'test' || github.event.label.name == 'e2eTests' && !github.event.push.repository.fork && github.actor != 'dependabot[bot]'"
    container: cypress/browsers:node14.7.0-chrome84
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          parallel: true
          group: e2e-chrome-parallel-38
          browser: chrome
          start: 'yarn start:forCypress'
          wait-on: 'http://localhost:3000'
          # wait for 200 secs for the server to respond
          wait-on-timeout: 200
        env:
          CI: true
          CYPRESS_RECORD_KEY: '6b0bce0d-a4e8-417b-bbee-9157cbe9a999'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_dhis2BaseUrl: https://test.e2e.dhis2.org/ca-test-2.38
  
  preview:
    runs-on: ubuntu-latest
    needs: cypress-38
    if: "github.event.label.name == 'test' && !github.event.push.repository.fork && github.actor != 'dependabot[bot]'"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build
        run: yarn build:standalone

      - name: Deploy
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        timeout-minutes: 1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: ${{ github.event.pull_request.title }}
          enable-pull-request-comment: true
          enable-commit-comment: false
          alias: deploy-preview-${{ github.event.number }}
          # customize according to project needs
          publish-dir: 'build/app'
        env:
          # org secret
          NETLIFY_AUTH_TOKEN: ${{ secrets.DHIS2_BOT_NETLIFY_TOKEN }}
          # repo secret
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
